// Java Solution

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int len = nums.length;
        int i;
        int[] res = new int[2] ;
        int num1 = 0;
        int sum = 0;

        for (i = 0; i < len; i++) {
            num1 = nums[i];

            for(int j = i+1; j < len; j++)
            {

                sum = num1 + nums[j];       
                if(sum == target)
                {
                    res[0]=i;
                    res[1]=j;
                }
            }
        
        }
        return res;
    }
}


// With HASHMAP 

class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            if (map.containsKey(complement)) {
                return new int[]{map.get(complement), i};
            }
            map.put(nums[i], i);
        }
        return new int[0];
    }
}
